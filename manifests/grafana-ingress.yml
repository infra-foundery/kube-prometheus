apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: argocd-issuer-argocd-selfsign
    ingress.kubernetes.io/force-ssl-redirect: "true"
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
  name: grafana-ingress
  namespace: monitoring
spec:
  rules:
  - host: grafana.kube.infrafoundry.com
    http:
      paths:
      - backend:
          service:
            name: grafana
            port:
              number: 3000
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - grafana.kube.infrafoundry.com
    secretName: grafana-cert-selfsigned
---
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: grafana-issuer-grafana-selfsign
spec:
  selfSigned: {}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: grafana-cert-selfsigned
spec:
  # Secret names are always required.
  secretName: grafana-cert-selfsigned
  privateKey:
    algorithm: RSA
    encoding: PKCS1
    size: 2048

  duration: 2160h # 90d
  renewBefore: 360h # 15d

  isCA: false
  usages:
    - server auth
    - client auth

  subject:
    organizations:
      - cert-manager

  commonName: grafana.kube.infrafoundry.com

  # At least one of commonName (possibly through literalSubject), dnsNames, uris, emailAddresses, ipAddresses or otherNames is required.
  dnsNames:
    - grafana.kube.infrafoundry.com
    - "*.kube.infrafoundry.com"

  # Issuer references are always required.
  issuerRef:
    name: grafana-issuer-grafana-selfsign
    kind: Issuer
    group: cert-manager.io